package io.flutter.plugins;

import androidx.annotation.NonNull;

public interface FlutterInterface {
    long getAuthedTeacherIdOrZero();

    @NonNull
    String getAccessToken();

    void on401();

    void navigateToGroup(long groupId, @NonNull String groupName);

    @NonNull
    String getCacheDir();

    void onNavigationIconClicked();
}



MethodChannel methodChannel = new MethodChannel(
        registry.registrarFor("com.qwert2603.crmit_android").messenger(),
        "app.channel.schedule"
);
methodChannel
        .setMethodCallHandler(
                (call, result) -> {
                    if (call.method.contentEquals("getAuthedTeacherIdOrZero")) {
                        result.success(flutterInterface.getAuthedTeacherIdOrZero());
                        return;
                    }
                    if (call.method.contentEquals("getAccessToken")) {
                        result.success(flutterInterface.getAccessToken());
                        return;
                    }
                    if (call.method.contentEquals("on401")) {
                        flutterInterface.on401();
                        result.success(null);
                        return;
                    }
                    if (call.method.contentEquals("getCacheDir")) {
                        result.success(flutterInterface.getCacheDir());
                        return;
                    }
                    if (call.method.contentEquals("onNavigationIconClicked")) {
                        flutterInterface.onNavigationIconClicked();
                        result.success(null);
                        return;
                    }
                    if (call.method.contentEquals("navigateToGroup")) {
                        int groupId = call.argument("groupId");
                        String groupName = call.argument("groupName");
                        flutterInterface.navigateToGroup(groupId, groupName);
                        result.success(null);
                        return;
                    }
                    result.notImplemented();
                }
        );