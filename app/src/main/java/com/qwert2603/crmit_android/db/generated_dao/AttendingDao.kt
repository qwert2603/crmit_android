// this file is auto-generated by com.qwert2603.dao_generator.GenerateDaoProcessor
package com.qwert2603.crmit_android.db.generated_dao

import android.arch.persistence.room.Dao
import android.arch.persistence.room.Insert
import android.arch.persistence.room.OnConflictStrategy
import android.arch.persistence.room.Query
import com.qwert2603.crmit_android.db.DaoInterface
import com.qwert2603.crmit_android.entity.Attending

@Dao
interface AttendingDao {

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun addItems(items: List<Attending>)

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun saveItem(item: Attending)

    @Query("SELECT * FROM Attending WHERE id = :itemId")
    fun getItem(itemId: Long): Attending?

    @Query(
        " SELECT *" +
        " FROM Attending" +
        " WHERE lessonId = :lessonId" +
        " ORDER BY studentFio" +
        " LIMIT :count" +
        " OFFSET :offset"
    )
    fun getItems(lessonId: Long, offset: Int, count: Int): List<Attending>

    @Query("DELETE FROM Attending WHERE lessonId = :lessonId")
    fun deleteAllItems(lessonId: Long)

    @Query("DELETE FROM Attending")
    fun clearTable()
}

fun AttendingDao.wrap(lessonId: Long): DaoInterface<Attending> = AttendingDaoWrapper(lessonId,  this)

private class AttendingDaoWrapper(private val lessonId: Long,  private val attendingDao: AttendingDao) : DaoInterface<Attending> {
    override fun addItems(items: List<Attending>) = attendingDao.addItems(items)
    override fun saveItem(item: Attending) = attendingDao.saveItem(item)
    override fun getItem(itemId: Long): Attending? = attendingDao.getItem(itemId)
    override fun getItems(search: String, offset: Int, count: Int): List<Attending> = attendingDao.getItems(lessonId, offset, count)
    override fun deleteAllItems() = attendingDao.deleteAllItems(lessonId)
}