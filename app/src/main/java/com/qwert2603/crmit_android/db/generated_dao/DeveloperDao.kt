// this file is auto-generated by com.qwert2603.dao_generator.GenerateDaoProcessor
package com.qwert2603.crmit_android.db.generated_dao

import androidx.room.Dao
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import com.qwert2603.crmit_android.db.DaoInterface
import com.qwert2603.crmit_android.entity.Developer

@Dao
interface DeveloperDao {

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun addItems(items: List<Developer>)

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun saveItem(item: Developer)

    @Query("SELECT * FROM Developer WHERE id = :itemId")
    fun getItem(itemId: Long): Developer?

    @Query(
        " SELECT *" +
        " FROM Developer" +
        " WHERE fio LIKE '%' || :search || '%'" +
        " ORDER BY fio" +
        " LIMIT :count" +
        " OFFSET :offset"
    )
    fun getItems(search: String, offset: Int, count: Int): List<Developer>

    @Query("DELETE FROM Developer ")
    fun deleteAllItems()

    @Query("DELETE FROM Developer")
    fun clearTable()
}

fun DeveloperDao.wrap(): DaoInterface<Developer> = DeveloperDaoWrapper( this)

private class DeveloperDaoWrapper( private val developerDao: DeveloperDao) : DaoInterface<Developer> {
    override fun addItems(items: List<Developer>) = developerDao.addItems(items)
    override fun saveItem(item: Developer) = developerDao.saveItem(item)
    override fun getItem(itemId: Long): Developer? = developerDao.getItem(itemId)
    override fun getItems(search: String, offset: Int, count: Int): List<Developer> = developerDao.getItems(search, offset, count)
    override fun deleteAllItems() = developerDao.deleteAllItems()
}