// this file is auto-generated by com.qwert2603.dao_generator.GenerateDaoProcessor
package com.qwert2603.crmit_android.db.generated_dao

import androidx.room.Dao
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query
import com.qwert2603.crmit_android.db.DaoInterface
import com.qwert2603.crmit_android.entity.Payment

@Dao
interface PaymentDao {

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun addItems(items: List<Payment>)

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun saveItem(item: Payment)

    @Query("SELECT * FROM Payment WHERE id = :itemId")
    fun getItem(itemId: Long): Payment?

    @Query(
        " SELECT *" +
        " FROM Payment" +
        " WHERE groupId = :groupId" +
        " ORDER BY studentFio" +
        " LIMIT :count" +
        " OFFSET :offset"
    )
    fun getItems(groupId: Long, offset: Int, count: Int): List<Payment>

    @Query("DELETE FROM Payment WHERE groupId = :groupId")
    fun deleteAllItems(groupId: Long)

    @Query("DELETE FROM Payment")
    fun clearTable()
}

fun PaymentDao.wrap(groupId: Long): DaoInterface<Payment> = PaymentDaoWrapper(groupId,  this)

private class PaymentDaoWrapper(private val groupId: Long,  private val paymentDao: PaymentDao) : DaoInterface<Payment> {
    override fun addItems(items: List<Payment>) = paymentDao.addItems(items)
    override fun saveItem(item: Payment) = paymentDao.saveItem(item)
    override fun getItem(itemId: Long): Payment? = paymentDao.getItem(itemId)
    override fun getItems(search: String, offset: Int, count: Int): List<Payment> = paymentDao.getItems(groupId, offset, count)
    override fun deleteAllItems() = paymentDao.deleteAllItems(groupId)
}